;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name turtle-dojo.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {setup {:protocol-inline nil, :meta {:file "/home/enrique/Documents/Meetups/Clojure/turtle-dojo/src/turtle_dojo/core.cljs", :line 5, :column 7, :end-line 5, :end-column 12, :arglists (quote ([]))}, :name turtle-dojo.core/setup, :variadic false, :file "src/turtle_dojo/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "/home/enrique/Documents/Meetups/Clojure/turtle-dojo/src/turtle_dojo/core.cljs", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([state]))}, :name turtle-dojo.core/update-state, :variadic false, :file "src/turtle_dojo/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-state {:protocol-inline nil, :meta {:file "/home/enrique/Documents/Meetups/Clojure/turtle-dojo/src/turtle_dojo/core.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([state]))}, :name turtle-dojo.core/draw-state, :variadic false, :file "src/turtle_dojo/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, translate-map {:name turtle-dojo.core/translate-map, :file "src/turtle_dojo/core.cljs", :line 41, :column 1, :end-line 41, :end-column 19, :meta {:file "/home/enrique/Documents/Meetups/Clojure/turtle-dojo/src/turtle_dojo/core.cljs", :line 41, :column 6, :end-line 41, :end-column 19}}, turtle-dojo {:protocol-inline nil, :meta {:file "/home/enrique/Documents/Meetups/Clojure/turtle-dojo/src/turtle_dojo/core.cljs", :line 45, :column 14, :end-line 45, :end-column 25, :export true, :arglists (quote ([]))}, :name turtle-dojo.core/turtle-dojo, :variadic false, :file "src/turtle_dojo/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:hsb :down :fn :color :posX :update :angle :up :size :setup :middleware :host :host-id :no-start :draw :posY}, :order [:hsb :color :angle :posX :posY :up :down :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}